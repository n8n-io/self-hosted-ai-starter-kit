volumes:
  n8n_storage:
    driver: local
    driver_opts:
      type: none
      device: /storage/n8n_storage
      o: bind
  postgres_storage:
    driver: local
    driver_opts:
      type: none
      device: /storage/n8n_postgres
      o: bind
  ollama_storage:
    driver: local
    driver_opts:
      type: none
      device: /storage/models
      o: bind
  qdrant_storage:
    driver: local
    driver_opts:
      type: none
      device: /storage/n8n_qdrant_storage
      o: bind
  letsencrypt_storage:
    driver: local
    driver_opts:
      type: none
      device: /storage/n8n_letsencrypt
      o: bind
  letsencrypt_data:
    driver: local
    driver_opts:
      type: none
      device: /storage/n8n_letsencrypt/data
      o: bind
  nginx_data:
    driver: local
    driver_opts:
      type: none
      device: /storage/n8n_nginx_data
      o: bind  
  n8n_backup:
    driver: local
    driver_opts:
      type: none
      device: /storage/n8n_storage/backup
      o: bind
  n8n_shared:
    driver: local
    driver_opts:
      type: none
      device: /storage/n8n_storage/shared
      o: bind
  minio_storage:
    driver: local
    driver_opts:
      type: none
      device: /storage/minio_storage
      o: bind
  redis_storage:
    driver: local
    driver_opts:
      type: none
      device: /storage/redis_storage
      o: bind

networks:
  demo:

x-n8n: &service-n8n
  image: n8nio/n8n:latest
  networks: ['demo']
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_USER=${POSTGRES_USER}
    - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
    - N8N_DIAGNOSTICS_ENABLED=false
    - N8N_PERSONALIZATION_ENABLED=false
    - N8N_ENCRYPTION_KEY
    - N8N_USER_MANAGEMENT_JWT_SECRET
    - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS
    - N8N_PROTOCOL
    - N8N_SSL_CERT
    - N8N_SSL_KEY
    - N8N_PORT
    - WEBHOOK_URL
  links:
    - postgres

# Settings and configurations that are common for all containers
x-ollama: &service-ollama
  image: ollama/ollama:latest
  container_name: ollama
  networks: ['demo']
  restart: unless-stopped
  ports:
    - 11434:11434
  volumes:
    - ollama_storage:/root/.ollama

x-init-ollama: &init-ollama
  image: ollama/ollama:latest
  networks: ['demo']
  container_name: ollama-pull-llama
  volumes:
    - ollama_storage:/root/.ollama
  entrypoint: /bin/sh
  command:
    - "-c"
    - "sleep 3; OLLAMA_HOST=ollama:11434 ollama pull llama3.2; OLLAMA_HOST=ollama:11434 ollama pull nomic-embed-text; OLLAMA_HOST=ollama:11434 ollama run moondream"

services:
  postgres:
    image: postgres:16-alpine
    networks: ['demo']
    restart: unless-stopped
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  n8n-import:
    <<: *service-n8n
    container_name: n8n-import
    entrypoint: /bin/sh
    command:
      - "-c"
      - "n8n import:credentials --separate --input=/backup/credentials && n8n import:workflow --separate --input=/backup/workflows"
    volumes:
      - n8n_backup:/backup
    depends_on:
      postgres:
        condition: service_healthy

  n8n:
    <<: *service-n8n
    container_name: n8n
    networks: ['demo']
    restart: unless-stopped
    ports:
      - 5678:5678
    volumes:
      - n8n_storage:/home/node/.n8n
      - n8n_backup:/backup
      - n8n_shared:/data/shared
    depends_on:
      postgres:
        condition: service_healthy
      n8n-import:
        condition: service_completed_successfully

  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    networks: ['demo']
    restart: unless-stopped
    ports:
      - 6333:6333
    volumes:
      - qdrant_storage:/qdrant/storage

  ollama-cpu:
    profiles: ["cpu"]
    <<: *service-ollama

  ollama-gpu:
    profiles: ["gpu-nvidia"]
    <<: *service-ollama
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  ollama-pull-llama-cpu:
    profiles: ["cpu"]
    <<: *init-ollama
    depends_on:
      - ollama-cpu

  ollama-pull-llama-gpu:
    profiles: ["gpu-nvidia"]
    <<: *init-ollama
    depends_on:
      - ollama-gpu

  minio:
    image: quay.io/minio/minio:RELEASE.2025-01-20T14-49-07Z
    container_name: minio
    networks: ['demo']
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER
      - MINIO_ROOT_PASSWORD
      - MINIO_SERVER_URL
      - MINIO_BROWSER_REDIRECT_URL
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5
    command: server --console-address ":9001" /data/minio
    volumes:
      - minio_storage:/data

  nginx:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    networks: ['demo']
    ports:
      - 80:80
      - 81:81
      - 443:443
    volumes:
      - letsencrypt_data:/data
      - letsencrypt_storage:/etc/letsencrypt
      - nginx_data:/etc/nginx

  redis:
    container_name: redis
    networks: ['demo']
    image: docker.io/valkey/valkey:8-alpine
    command: valkey-server --save 30 1 --loglevel warning
    restart: unless-stopped
    volumes:
      - redis_storage:/data
    cap_drop:
      - ALL
    cap_add:
      - SETGID
      - SETUID
      - DAC_OVERRIDE
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"

  searxng:
    container_name: searxng
    networks: ['demo']
    image: docker.io/searxng/searxng:latest
    restart: unless-stopped
    ports:
      - "6060:8080"    
    volumes:
      - ./searxng:/etc/searxng:rw
    environment:
      - SEARXNG_BASE_URL=http://${SEARXNG_HOSTNAME:-localhost}/
      - UWSGI_WORKERS=${SEARXNG_UWSGI_WORKERS:-4}
      - UWSGI_THREADS=${SEARXNG_UWSGI_THREADS:-4}
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"
